type Approval @entity(immutable: true) {
	id: Bytes!
	owner: Bytes! # address
	approved: Bytes! # address
	tokenId: BigInt! # uint256
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
	id: Bytes!
	owner: Bytes! # address
	operator: Bytes! # address
	approved: Boolean! # bool
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
	id: Bytes!
	previousOwner: Bytes! # address
	newOwner: Bytes! # address
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
	id: Bytes!
	from: Bytes! # address
	to: Bytes! # address
	tokenId: BigInt! # uint256
	blockNumber: BigInt!
	blockTimestamp: BigInt!
	transactionHash: Bytes!
}

type Token @entity {
	id: ID!
	tokenID: BigInt!
	tokenURI: String!
	ipfsURI: TokenMetadata
	updatedAtTimestamp: BigInt
	owner: User!
}

type TokenMetadataAttributes @entity {
	id: ID!
	trait_type0: String!
	value0: String!
}
type TokenMetadata @entity {
	id: ID!
	image: String!
	attributes: TokenMetadataAttributes!
}

type User @entity {
	id: ID!
	address: Bytes!
}
